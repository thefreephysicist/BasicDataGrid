<Control x:Name="Control"
             x:Class="BasicSample.Controls.NumberFilterPopUpControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dgx="clr-namespace:DataGridExtensions;assembly=DataGridExtensions"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Control.Template>
        <ControlTemplate>
            <Grid>
                <ToggleButton x:Name="button" IsChecked="{Binding Path=IsPopupVisible, Source={x:Reference Control}, Mode=TwoWay}">
                    <ToggleButton.Style>
                        <Style TargetType="Control">
                            <!-- Only show the button if the filter is active or if the mouse is over the column header -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Filter, Source={x:Reference Control}}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridColumnHeader}}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                    <!-- Reuse the standard icon, but change color to green -->
                    <Control Style="{DynamicResource {x:Static dgx:DataGridFilter.IconStyleKey}}" Foreground="Green" />
                </ToggleButton>

                <Popup x:Name="popup" 
                       IsOpen="{Binding Path=IsPopupVisible, Mode=TwoWay}"
                       AllowsTransparency="True"
                       DataContext="{Binding Source={x:Reference Control}}" StaysOpen="False">
                    <Border Background="White" BorderBrush="Gray" BorderThickness="1" CornerRadius="3" Padding="4">
                        <StackPanel>
                            <TextBlock x:Name="Caption" Text="{Binding Path=Caption, TargetNullValue='Enter the limits:'}" Margin="0,3" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Min:" />
                                <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Minimum}" />
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Max:" />
                                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=Maximum}" />

                            </Grid>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </ControlTemplate>
    </Control.Template>
</Control>
